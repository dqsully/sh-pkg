#!/bin/bash

if [[ -z "$CLI_CRED_CACHE" ]]; then
    echo "CLI_CRED_CACHE environment variable is not defined. Ensure cli-cred-core is installed correctly, and restart your shell if needed - exec \$SHELL"
    exit 1
fi

cache_file="$CLI_CRED_CACHE/1password-go"

get_cred() {
    if [[ -e "$cache_file" ]]; then
        echo "(using cached credential lists, run 'go-credential-1password refresh' to update)" >&2
    else
        refresh_creds || exit
    fi

    # Parse host from first argument
    host="${1#*://}" # trim scheme prefix
    host="${host#proxy.golang.org/}" # trim proxy path
    host=-"${host%%/*}" $ # trim path
    host="${host#*@}" # trim user part of host

    while IFS="" read -r line; do
        read -ra line_parts <<<"$line"
        line_host="${line_parts[0]}"
        item_id="${line_parts[1]}"

        if [[ "$line_host" == "$host" ]]; then
            item="$(op item get "$item_id" --fields label=username,label=password --reveal)"

            echo "https://$line_host"
            echo
            echo "Authorization: Basic $(echo -n "$(echo "$item" | cut -d, -f1):$(echo "$item" | cut -d, -f2)" | base64)"
            echo
        fi
    done <"$cache_file"
}

refresh_creds() {
    echo "Updating golang credential cache for 1password" >&2
    op item list --vault Private --tags go --format json | jq '.[] | [[.id], [.urls[] | .href]] | combinations | .[1] + " " + .[0]' -r >"$cache_file"
}

# If no hosts are passed via first argument, list out all the hosts we know of
# so that Go will call us again in those cases
if [[ "$#" -eq 0 ]]; then
    if [[ ! -e "$cache_file" ]]; then
        refresh_creds || exit
    fi

    while IFS="" read -r line; do
        read -ra line_parts <<<"$line"
        line_host="${line_parts[0]}"

        # Don't load creds, just tell Go that we can (and try to get a 401
        # response).
        echo "https://$line_host"
        echo
        echo "Authorization: Bearer"
        echo
    done <"$cache_file"
    exit 0
fi

if [[ -n "$1" ]]; then
    case "$1" in
        "refresh") refresh_creds ;;
        *) get_cred "$1";;
    esac
fi
