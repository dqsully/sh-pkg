#!/bin/bash

cache_file="$HOME/.sh-pkg/.cache/cli-cred/bitwarden-docker"
session_file="/tmp/$USER/bitwarden.session"

login() {
    if [[ "$1" == "new-window" ]]; then
        # TODO: support more terminal types than just Konsole
        konsole -e 'bitwarden-login'
    else
        bitwarden-login
    fi
}

get_session() {
    if [[ ! -f "$session_file" ]]; then
        login "$1" || exit
    elif ! bw unlock --check >/dev/null ; then
        login "$1" || exit
    fi

    cat "$session_file"
}

get_cred() {
    if [[ -e "$cache_file" ]]; then
        echo "(using cached credential lists, run 'docker-credential-bitwarden refresh' to update)" >&2
    else
        refresh_creds || exit
    fi

    # Parse host from stdin
    host="$(cat)"

    session=$(get_session new-window) || exit

    # Print first matching entry, if any
    while IFS="" read -r line; do
        read -ra line_parts <<<"$line"
        line_host="${line_parts[0]}"
        item_id="${line_parts[1]}"

        if [[ "$line_host" == "$host" ]]; then
            BW_SESSION="$session" bw get item "$item_id" | jq -er '{Username: .login.username, Secret: .login.password}'
            return 0
        fi
    done <"$cache_file"

    # ...otherwise an empty object to avoid errors
    echo "{}"
}

refresh_creds() {
    session=$(get_session) || exit

    echo "Updating Docker credential cache for Bitwarden" >&2
    BW_SESSION="$session" bw list items | jq -er '.[] | select(.notes and (.notes | test("\\btag:docker\\b"))) | [[.id], [.login.uris[] | .uri | capture("(?:^[^:/]+://)?(?<host>[a-z0-9.-]+)").host]] | combinations | .[1] + " " + .[0]' >"$cache_file"
}

case "$1" in
    "get"|"") get_cred ;;
    "refresh") refresh_creds ;;
    *) exit 1;;
esac
