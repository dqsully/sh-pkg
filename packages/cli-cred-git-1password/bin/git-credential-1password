#!/bin/bash

cache_file="$HOME/.sh-pkg/.cache/cli-cred/1password-git"

get_cred() {
    if [[ -e "$cache_file" ]]; then
        echo "(using cached credential lists, run 'git-credential-1password refresh' to update)" >&2
    else
        refresh_creds || exit
    fi

    # Parse host, protocol from stdin
    host=
    protocol=

    while IFS="" read -r line; do
        case "$line" in
            protocol=*) protocol=$(echo "$line" | cut -d= -f2) ;;
            host=*) host=$(echo "$line" | cut -d= -f2) ;;
        esac
    done

    # Output all matching entries
    while IFS="" read -r line; do
        read -ra line_parts <<<"$line"
        line_host="${line_parts[0]}"
        item_id="${line_parts[1]}"

        if [[ "$line_host" == "$host" ]]; then
            item="$(op item get "$item_id" --fields label=username,label=password --reveal)"

            echo "protocol=$protocol"
            echo "host=$host"
            echo "username=$(echo "$item" | cut -d, -f1)"
            echo "password=$(echo "$item" | cut -d, -f2)"
            echo
        fi
    done <"$cache_file"
}

refresh_creds() {
    echo "Updating git credential cache for 1password" >&2
    while read -r itemid; do
        echo "$(op item get "$itemid" --fields label=host)" "$itemid"
    done < <(op item list --vault Private --tags git --format json | jq '.[] | .id' -r) >"$cache_file"
}

case "$1" in
    "get"|"") get_cred ;;
    "refresh") refresh_creds ;;
    *) exit 1;;
esac
